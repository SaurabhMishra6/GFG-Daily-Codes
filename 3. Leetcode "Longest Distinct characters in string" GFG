Given a string S, find the length of the longest substring with all distinct characters. 

<---------------------------------------------------------------Code------------------------------------------------------>
---------------------------------------------------------------------------------------------------------------------------

class Solution{
    static int longestSubstrDistinctChars(String S){
        int i=0; 
        int j=0;
        int max = 0;
        
        int n = S.length();
        
        HashMap<Character, Integer> map = new HashMap<>();
        
        while(j < n){
           char ch = S.charAt(j);
           if(map.containsKey(ch)){
               map.put(ch, map.get(ch)+1);
           } else {
               map.put(ch, 1);
           }
           
           if(map.size() == (j-i+1)){
               max = Math.max(max, (j-i+1));
               j++;
           } else if(map.size() < (j-i+1)){
               while(map.size()< (j-i+1)){
                   map.put(S.charAt(i), map.get(S.charAt(i)) - 1);
                if (map.get(S.charAt(i)) == 0) {
                    map.remove(S.charAt(i));
                }
                i++;
               }
               j++;
           }
        }
        return max;
    }
}
